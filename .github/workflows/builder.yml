name: Build Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from config
        id: version
        run: |
          VERSION=$(grep '^version:' config.yaml | awk '{print $2}' | tr -d '"')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Get base image
        id: base
        run: |
          BASE=$(grep '${{ matrix.arch }}:' build.yaml | awk '{print $2}')
          echo "image=${BASE}" >> $GITHUB_OUTPUT

      - name: Set platform
        id: platform
        run: |
          case ${{ matrix.arch }} in
            aarch64) PLATFORM="linux/arm64" ;;
            amd64) PLATFORM="linux/amd64" ;;
            armhf) PLATFORM="linux/arm/v6" ;;
            armv7) PLATFORM="linux/arm/v7" ;;
            i386) PLATFORM="linux/386" ;;
          esac
          echo "platform=${PLATFORM}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ steps.platform.outputs.platform }}
          build-args: |
            BUILD_FROM=${{ steps.base.outputs.image }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/hassio-shelly-scanner-${{ matrix.arch }}:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/hassio-shelly-scanner-${{ matrix.arch }}:latest
